{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wei Hang\\\\OneDrive\\\\Documents\\\\GitHub\\\\todo_tracker_hw2\\\\todo_tracker_hw2-main\\\\src\\\\App.js\";\n// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\nimport React, { Component } from 'react';\nimport testData from './test/testData.json';\nimport jsTPS from './common/jsTPS'; // THESE ARE OUR REACT COMPONENTS\n\nimport Navbar from './components/Navbar';\nimport LeftSidebar from './components/LeftSidebar';\nimport Workspace from './components/Workspace';\nimport ItemsListHeaderComponent from './components/ItemsListHeaderComponent';\nimport ItemsListComponent from './components/ItemsListComponent';\nimport ListsComponent from './components/ListsComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    // ALWAYS DO THIS FIRST\n    super(props); // DISPLAY WHERE WE ARE\n\n    this.loadToDoList = toDoList => {\n      console.log(\"loading \" + toDoList); // MAKE SURE toDoList IS AT THE TOP OF THE STACK BY REMOVING THEN PREPENDING\n\n      const nextLists = this.state.toDoLists.filter(testList => testList.id !== toDoList.id);\n      nextLists.unshift(toDoList);\n      this.setState({\n        toDoLists: nextLists,\n        currentList: toDoList\n      });\n    };\n\n    this.addNewList = () => {\n      let newToDoListInList = [this.makeNewToDoList()];\n      let newToDoListsList = [...newToDoListInList, ...this.state.toDoLists];\n      let newToDoList = newToDoListInList[0]; // AND SET THE STATE, WHICH SHOULD FORCE A render\n\n      this.setState({\n        toDoLists: newToDoListsList,\n        currentList: newToDoList,\n        nextListId: this.state.nextListId + 1\n      }, this.afterToDoListsChangeComplete);\n    };\n\n    this.addItem = () => {\n      let newItem = this.makeNewToDoListItem();\n      let newItemList = [];\n\n      for (let i = 1; i < this.state.currentList.i; i++) {\n        newItemList.push(this.state.currentList[i]);\n      }\n\n      newItemList = newItemList.push(newItem);\n      let newListOfList = this.state.toDoLists;\n      let newListList = newListOfList.splice(1, 1, newItemList);\n      this.setState({\n        toDoLists: newListList,\n        currentList: newItemList,\n        nextListItemId: this.state.nextListItemId + 1\n      }, this.afterToDoListsChangeComplete);\n    };\n\n    this.makeNewToDoList = () => {\n      let newToDoList = {\n        id: this.highListId,\n        name: 'Untitled',\n        items: []\n      };\n      return newToDoList;\n    };\n\n    this.makeNewToDoListItem = () => {\n      let newToDoListItem = {\n        description: \"No Description\",\n        dueDate: \"none\",\n        status: \"incomplete\"\n      };\n      return newToDoListItem;\n    };\n\n    this.afterToDoListsChangeComplete = () => {\n      console.log(\"App updated currentToDoList: \" + this.state.currentList); // WILL THIS WORK? @todo\n\n      let toDoListsString = JSON.stringify(this.state.toDoLists);\n      localStorage.setItem(\"recent_work\", toDoListsString);\n    };\n\n    this.openModal = () => {};\n\n    this.closeList = () => {};\n\n    console.log(\"App constructor\"); // MAKE OUR TRANSACTION PROCESSING SYSTEM\n\n    this.tps = new jsTPS(); // CHECK TO SEE IF THERE IS DATA IN LOCAL STORAGE FOR THIS APP\n\n    let recentLists = localStorage.getItem(\"recentLists\");\n    console.log(\"recentLists: \" + recentLists);\n\n    if (!recentLists) {\n      recentLists = JSON.stringify(testData.toDoLists);\n      localStorage.setItem(\"toDoLists\", recentLists);\n    }\n\n    recentLists = JSON.parse(recentLists); // FIND OUT WHAT THE HIGHEST ID NUMBERS ARE FOR LISTS\n\n    let highListId = -1;\n    let highListItemId = -1;\n\n    for (let i = 0; i < recentLists.length; i++) {\n      let toDoList = recentLists[i];\n\n      if (toDoList.id > highListId) {\n        highListId = toDoList.id;\n      }\n\n      for (let j = 0; j < toDoList.items.length; j++) {\n        let toDoListItem = toDoList.items[j];\n        if (toDoListItem.id > highListItemId) highListItemId = toDoListItem.id;\n      }\n    }\n\n    ; // SETUP OUR APP STATE\n\n    this.state = {\n      toDoLists: recentLists,\n      currentList: {\n        items: []\n      },\n      nextListId: highListId + 1,\n      nextListItemId: highListItemId + 1,\n      useVerboseFeedback: true\n    };\n  } // WILL LOAD THE SELECTED LIST\n\n\n  render() {\n    let items = this.state.currentList.items;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"root\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LeftSidebar, {\n        toDoLists: this.state.toDoLists,\n        loadToDoListCallback: this.loadToDoList,\n        addNewListCallback: this.addNewList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Workspace, {\n        toDoListItems: items,\n        addItemCallback: this.addItem,\n        confirmDeleteCallback: this.openModal,\n        closeListCallback: this.closeList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Wei Hang/OneDrive/Documents/GitHub/todo_tracker_hw2/todo_tracker_hw2-main/src/App.js"],"names":["React","Component","testData","jsTPS","Navbar","LeftSidebar","Workspace","ItemsListHeaderComponent","ItemsListComponent","ListsComponent","App","constructor","props","loadToDoList","toDoList","console","log","nextLists","state","toDoLists","filter","testList","id","unshift","setState","currentList","addNewList","newToDoListInList","makeNewToDoList","newToDoListsList","newToDoList","nextListId","afterToDoListsChangeComplete","addItem","newItem","makeNewToDoListItem","newItemList","i","push","newListOfList","newListList","splice","nextListItemId","highListId","name","items","newToDoListItem","description","dueDate","status","toDoListsString","JSON","stringify","localStorage","setItem","openModal","closeList","tps","recentLists","getItem","parse","highListItemId","length","j","toDoListItem","useVerboseFeedback","render"],"mappings":"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","sourcesContent":["// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\nimport React, { Component } from 'react';\nimport testData from './test/testData.json'\nimport jsTPS from './common/jsTPS'\n\n// THESE ARE OUR REACT COMPONENTS\nimport Navbar from './components/Navbar'\nimport LeftSidebar from './components/LeftSidebar'\nimport Workspace from './components/Workspace'\nimport ItemsListHeaderComponent from './components/ItemsListHeaderComponent'\nimport ItemsListComponent from './components/ItemsListComponent'\nimport ListsComponent from './components/ListsComponent'\n\nclass App extends Component {\n  constructor(props) {\n    // ALWAYS DO THIS FIRST\n    super(props);\n\n    // DISPLAY WHERE WE ARE\n    console.log(\"App constructor\");\n\n    // MAKE OUR TRANSACTION PROCESSING SYSTEM\n    this.tps = new jsTPS();\n\n    // CHECK TO SEE IF THERE IS DATA IN LOCAL STORAGE FOR THIS APP\n    let recentLists = localStorage.getItem(\"recentLists\");\n    console.log(\"recentLists: \" + recentLists);\n    if (!recentLists) {\n      recentLists = JSON.stringify(testData.toDoLists);\n      localStorage.setItem(\"toDoLists\", recentLists);\n    }\n    recentLists = JSON.parse(recentLists);\n\n    // FIND OUT WHAT THE HIGHEST ID NUMBERS ARE FOR LISTS\n    let highListId = -1;\n    let highListItemId = -1;\n    for (let i = 0; i < recentLists.length; i++) {\n      let toDoList = recentLists[i];\n      if (toDoList.id > highListId) {\n        highListId = toDoList.id;\n      }\n      for (let j = 0; j < toDoList.items.length; j++) {\n        let toDoListItem = toDoList.items[j];\n        if (toDoListItem.id > highListItemId)\n        highListItemId = toDoListItem.id;\n      }\n    };\n\n    // SETUP OUR APP STATE\n    this.state = {\n      toDoLists: recentLists,\n      currentList: {items: []},\n      nextListId: highListId+1,\n      nextListItemId: highListItemId+1,\n      useVerboseFeedback: true\n    }\n  }\n\n  // WILL LOAD THE SELECTED LIST\n  loadToDoList = (toDoList) => {\n    console.log(\"loading \" + toDoList);\n\n    // MAKE SURE toDoList IS AT THE TOP OF THE STACK BY REMOVING THEN PREPENDING\n    const nextLists = this.state.toDoLists.filter(testList =>\n      testList.id !== toDoList.id\n    );\n    nextLists.unshift(toDoList);\n\n    this.setState({\n      toDoLists: nextLists,\n      currentList: toDoList\n    });\n  }\n\n  addNewList = () => {\n    let newToDoListInList = [this.makeNewToDoList()];\n    let newToDoListsList = [...newToDoListInList, ...this.state.toDoLists];\n    let newToDoList = newToDoListInList[0];\n\n    // AND SET THE STATE, WHICH SHOULD FORCE A render\n    this.setState({\n      toDoLists: newToDoListsList,\n      currentList: newToDoList,\n      nextListId: this.state.nextListId+1\n    }, this.afterToDoListsChangeComplete);\n  }\n\n  addItem = () => {\n    let newItem = this.makeNewToDoListItem();\n    let newItemList = [];\n    for(let i = 1; i<this.state.currentList.i; i++){\n      newItemList.push(this.state.currentList[i]);\n    }\n    newItemList = newItemList.push(newItem);\n    let newListOfList = this.state.toDoLists;\n    let newListList = newListOfList.splice(1, 1, newItemList);\n    this.setState ({\n      toDoLists:newListList,\n      currentList: newItemList,\n      nextListItemId: this.state.nextListItemId+1\n    }, this.afterToDoListsChangeComplete);\n  }\n\n  makeNewToDoList = () => {\n    let newToDoList = {\n      id: this.highListId,\n      name: 'Untitled',\n      items: []\n    };\n    return newToDoList;\n  }\n\n  makeNewToDoListItem = () =>  {\n    let newToDoListItem = {\n      description: \"No Description\",\n      dueDate: \"none\",\n      status: \"incomplete\"\n    };\n    return newToDoListItem;\n  }\n\n  // THIS IS A CALLBACK FUNCTION FOR AFTER AN EDIT TO A LIST\n  afterToDoListsChangeComplete = () => {\n    console.log(\"App updated currentToDoList: \" + this.state.currentList);\n\n    // WILL THIS WORK? @todo\n    let toDoListsString = JSON.stringify(this.state.toDoLists);\n    localStorage.setItem(\"recent_work\", toDoListsString);\n  }\n\n  openModal = () => {\n    \n  }\n\n  closeList = () => {\n\n  }\n\n  render() {\n    let items = this.state.currentList.items;\n    return (\n      <div id=\"root\">\n        <Navbar />\n        <LeftSidebar \n          toDoLists={this.state.toDoLists}\n          loadToDoListCallback={this.loadToDoList}\n          addNewListCallback={this.addNewList}\n        />\n        <Workspace toDoListItems={items} \n          addItemCallback={this.addItem}\n          confirmDeleteCallback={this.openModal}\n          closeListCallback={this.closeList}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}